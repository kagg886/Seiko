plugins {
    id 'com.android.application'
}
apply plugin: 'kotlin-android'

android {
    compileSdk 34

    packagingOptions { //Mirai升级2.14.0时需要添加这两项来排除，否则报错
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    defaultConfig {
        applicationId "com.kagg886.seiko"
        minSdk 28
        targetSdk 34
        versionCode gradle.ext.app_version_code
        versionName gradle.ext.app_version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BUILD_TIME", getDate()
        buildConfigField "String", "MIRAI_VERSION", "\"" + gradle.mirai_version + "\""
        buildConfigField "String", "COMMIT_HASH", "\"" + getGitSha() + "\""
    }

    buildTypes {
        release {
            //minifyEnabled true      // 开启混淆
            minifyEnabled false      // 开启混淆
            zipAlignEnabled true    // 已启用压缩
            //shrinkResources true    // 缩减资源
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [
                    APP_NAME: "@string/app_name",
            ]
            matchingFallbacks = ['debug']
        }

        debug {
            applicationIdSuffix ".debug"

            manifestPlaceholders = [
                    APP_NAME: "@string/app_name_debug",
            ]
        }

//        debug {
//            minifyEnabled true      // 开启混淆
//            zipAlignEnabled true    // 已启用压缩
//            shrinkResources true    // 缩减资源
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.22"))
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation 'com.alibaba:fastjson:2.0.34'
    implementation 'org.jsoup:jsoup:1.17.1'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    implementation fileTree(dir: 'lib', includes: ["*.jar"])


    implementation("net.mamoe:mirai-core:$gradle.mirai_version")
    implementation("net.mamoe:mirai-core-utils:$gradle.mirai_version")
//    compileOnly("net.mamoe:mirai-core-androidDebug:$gradle.mirai_version")
//    compileOnly("net.mamoe:mirai-core-api-androidDebug:$gradle.mirai_version")
    compileOnly("net.mamoe:mirai-core-utils:$gradle.mirai_version")


//    api("net.mamoe:mirai-core-api-android:$gradle.mirai_version")
//    implementation("net.mamoe:mirai-core-utils-androidRelease:$gradle.mirai_version")


    // 代码编辑器
    implementation(platform("io.github.Rosemoe.sora-editor:bom:0.21.1"))
    implementation("io.github.Rosemoe.sora-editor:editor")

    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation files('libs/beacon_android_v3.2.0.3_official64_release.jar')

    implementation project(':PluginAPI')
    implementation project(':Tools')

    implementation 'com.alibaba.fastjson2:fastjson2:2.0.42'

    implementation('io.github.seikodictionaryenginev2:core_base:2.0-dev-5')
    implementation('io.github.seikodictionaryenginev2:base_command:2.0-dev-1')

}

String getDate() {
    Date date = new Date()
    String dates = "\"" + date.format("yyyy-MM-dd HH:mm:ss") + "\""
    return dates
}

String getGitSha() {
    InputStream out = Runtime.getRuntime().exec("git rev-parse --short HEAD").getInputStream()
    byte[] a = new byte[7]
    out.read(a)
    out.close()
    return new String(a)
}